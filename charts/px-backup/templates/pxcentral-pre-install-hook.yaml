{{/* Setting defaults if they are omitted. */}}
{{- $customRegistryEnabled := .Values.customeRegistryEnabled | default false }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pxcentral-onprem-job
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-2"
  labels:
    app.kubernetes.io/managed-by: Helm
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pxcentral-onprem-job
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-2"
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pxcentral-onprem-job
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-2"
  labels:
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: pxcentral-onprem-job
  namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: pxcentral-onprem-job
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pxcentral-pre-install-hook
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/managed-by: Helm
    name: pxcentral-pre-install-hook
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-2"
spec:
  template:
    spec:
      serviceAccountName: pxcentral-onprem-job
      containers:
      - name: pxcentral-pre-install
        image: {{ printf "%s/%s/%s:%s" .Values.dockerRegistryURL .Values.dockerImageRepoName .Values.preSetupImage.imageName .Values.preSetupImage.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        securityContext:
          privileged: true
        args: ["--pxcentral-namespace", "{{ .Values.namespace }}", "--ingress-controller", "{{ .Values.ingressControllerSetup }}", "--persistent-storage", "{{ .Values.persistentStorage.enabled }}","--storage-class-name", "{{ .Values.persistentStorage.storageClassName }}", "--custom-registry-enabled", "{{ .Values.customeRegistryEnabled }}", "--custom-registry-url", "{{ .Values.dockerRegistryURL }}", "--image-repo-name", "{{ .Values.dockerImageRepoName }}", "--image-pull-secret", "{{ .Values.imagePullSecrets }}", "--external-oidc-enabled", "{{ .Values.externalOIDC.enabled }}", "--external-oidc-endpoint", "{{ .Values.externalOIDC.endpoint }}", "--external-oidc-client-id", "{{ .Values.externalOIDC.clientID }}", "--external-oidc-client-secret", "{{ .Values.externalOIDC.clientSecret }}"]
      {{- if eq $customRegistryEnabled true }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      restartPolicy: Never
  backoffLimit: 5
  activeDeadlineSeconds: 2400