apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mongo-statefulset-reader
  namespace: px-backup
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get", "list","update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["delete","get", "list", "watch","create","update"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["delete","get", "list", "watch","update","create"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "create", "delete", "update", "list"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs", "jobs/status"]
    verbs: ["get", "create", "delete", "update",  "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["cronjobs"]
    verbs: ["get", "create", "delete", "update"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "update", "get", "patch", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["create", "update", "get", "patch", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mongo-statefulset-reader-binding
  namespace: px-backup
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
subjects:
  - kind: ServiceAccount
    name: default
    namespace: px-backup
roleRef:
  kind: Role
  name: mongo-statefulset-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-upgrade-check
  labels:
    app: px-backup
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    #"helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    spec:
      containers:
        - name: check-upgrade
          image: pure-artifactory.dev.purestorage.com/px-docker-dev-virtual/users/ss/pxcentral-onprem-post-setup-base:pu-check
          imagePullPolicy: Always
          command: ["python", "/pxcentral-pre-upgrade/pxc-pre-upgrade.py"]
          env:
            - name: STATEFULSET_NAME
              value: "pxc-backup-mongodb" 
            - name: NAMESPACE
              value: "px-backup"  
            - name: TARGET_VERSION
              value: "7"  # Change to the desired target version
      restartPolicy: Never

