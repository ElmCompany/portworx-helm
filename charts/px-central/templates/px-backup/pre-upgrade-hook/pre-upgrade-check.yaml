apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mongo-statefulset-reader
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    name: pxcentral-pre-upgrade-hook
    app.kubernetes.io/component: pxcentral-pre-upgrade-hook
rules:
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get", "list","update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["delete","get", "list", "watch","create","update"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["delete","get", "list", "watch","update","create"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "create", "delete", "update", "list"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs", "jobs/status"]
    verbs: ["get", "create", "delete", "update",  "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["cronjobs"]
    verbs: ["get", "create", "delete", "update"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "update", "get", "patch", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["create", "update", "get", "patch", "list", "delete"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mongo-statefulset-reader-binding
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    name: pxcentral-pre-upgrade-hook
    app.kubernetes.io/component: pxcentral-pre-upgrade-hook
subjects:
  - kind: ServiceAccount
    name: default
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: mongo-statefulset-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pre-upgrade-log-pvc
  namespace: {{ .Release.Namespace }}
  labels:
    name: pxcentral-pre-upgrade-hook
    app.kubernetes.io/component: pxcentral-pre-upgrade-hook
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: {{ .Values.persistentStorage.storageClassName }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pre-upgrade-dump-pvc
  namespace: {{ .Release.Namespace }}
  labels:
    name: pxcentral-pre-upgrade-hook
    app.kubernetes.io/component: pxcentral-pre-upgrade-hook
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: {{ .Values.persistentStorage.storageClassName }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-upgrade-check
  namespace: {{ .Release.Namespace }}
  labels:
    app: px-backup
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    labels:
    name: pxcentral-pre-upgrade-hook
    app.kubernetes.io/component: pxcentral-pre-upgrade-hook
spec:
  template:
    spec:
      initContainers:
        - name: init-log-permissions
          image: busybox
          command: ["sh", "-c", "mkdir -p /logs && chmod -R 777 /logs"]
          volumeMounts:
          - name: log-volume
            mountPath: /logs
        - name: init-dump-permissions
          image: busybox
          command: ["sh", "-c", "mkdir -p /dumps && chmod -R 777 /dumps"]
          volumeMounts:
          - name: dump-volume
            mountPath: /dumps
      containers:
        - name: check-upgrade
          image: {{ printf "%s/%s/%s:%s" .Values.images.preUpgradeHookImage.registry .Values.images.preUpgradeHookImage.repo .Values.images.preUpgradeHookImage.imageName .Values.images.preUpgradeHookImage.tag }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          command: ["python", "/pxcentral-pre-upgrade/pxc-pre-upgrade.py"]
          env:
            - name: STATEFULSET_NAME
              value: pxc-backup-mongodb
            - name: NAMESPACE
              value: {{ .Release.Namespace }}  
            - name: TARGET_VERSION
              value: {{ .Values.images.mongodbImage.tag }}
            - name: K8S_SERVICE_NAME
              value: pxc-backup-mongodb-headless
            - name: MONGODB_ROOT_USERNAME
              value: root
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-root-password
                  name: pxc-backup-mongodb
            - name: JOB_TIMEOUT_SECONDS
              value: "600"
            - name: MONGODB_IMAGES
              value: >
                {
                  "registry": "{{ .Values.mongodbImages.registry }}",
                  "repo": "{{ .Values.mongodbImages.repo }}",
                  "imageName": "{{ .Values.mongodbImages.imageName }}",
                  "tags": {
                    "mongodb5": "{{ .Values.mongodbImages.tags.mongodb5 }}",
                    "mongodb6": "{{ .Values.mongodbImages.tags.mongodb6 }}",
                    "mongodb7": "{{ .Values.mongodbImages.tags.mongodb7 }}"
                  }
                }
          volumeMounts:
            - name: log-volume
              mountPath: /logs
            - name: dump-volume
              mountPath: /dumps
      volumes:
        - name: log-volume
          persistentVolumeClaim:
            claimName: pre-upgrade-log-pvc
        - name: dump-volume
          persistentVolumeClaim:
            claimName: pre-upgrade-dump-pvc
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 3600  # Retain pod for 1 hour after completion